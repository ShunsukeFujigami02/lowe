#!/bin/bash

outputfile="Energy_`date '+%Y%m%d_%H%M%S'`"
outputfilecsv="$HOME/retro/lowe/analizefile/${outputfile}.csv"
outputfileroot="$HOME/retro/lowe/analizefile/${outputfile}.root"
conftemp="$HOME/retro/lowe/config/config_Energy_template.sh"
confhalf="$HOME/retro/lowe/config/half.sh"
today=$(date)

cp ${conftemp} ${confhalf}
confname="$HOME/retro/lowe/config/${outputfile}.sh"
logname="$HOME/retro/lowe/log/${outputfile}.log"
jobname="$HOME/retro/lowe/sh/${outputfile}.sh"

infilehead=${infilehead%.*}

infilecsv="${infilehead}.csv"
infileroot="${infilehead}.root"

if [ ! -f $infileroot ];then
    echo $infileroot + "is not exist... exit"
    exit
fi

if [ ! -f $infilecsv ];then
    echo $infilecsv + "is not exist... exit"
    exit
fi

echo ${infilecsv} > ${outputfilecsv}

sed -i -e "s!infile!${infileroot}!g" ${confhalf}

echo "EnergyFunctionName,string,${EnergyFunctionName}" >> ${outputfilecsv}
sed -i -e "s/energyfuncname/${EnergyFunctionName}/g" ${confhalf}

echo "EnergyNEvents,int,${EnergyNEvents}" >> ${outputfilecsv}
sed -i -e "s/nevents/${EnergyNEvents}/g" ${confhalf}

echo "Lambda,double,${Lambda}" >> ${outputfilecsv}
sed -i -e "s/lambda/${Lambda}/g" ${confhalf}

if [ ${EnergyFunctionName} = "OnRetroFinal" ];then
    echo "LambdaRetro,double,${LambdaRetro}" >> ${outputfilecsv}
    sed -i -e "s/lamRetro/${LambdaRetro}/g" ${confhalf}
fi

if [ ${EnergyFunctionName} = "OnRetroFinalTrue" ];then
    echo "LambdaRetro,double,${LambdaRetro}" >> ${outputfilecsv}
    sed -i -e "s/lamRetro/${LambdaRetro}/g" ${confhalf}
fi

if [ ${EnergyFunctionName} = "OnRetroFinalver2True" ];then
    echo "LambdaRetro,double,${LambdaRetro}" >> ${outputfilecsv}
    sed -i -e "s/lamRetro/${LambdaRetro}/g" ${confhalf}
fi

if [ ${EnergyFunctionName} = "OnRetroFinalver3True" ];then
    echo "LambdaRetro,double,${LambdaRetro}" >> ${outputfilecsv}
    sed -i -e "s/lamRetro/${LambdaRetro}/g" ${confhalf}
fi

isexistsamefile=`../build/isexistsamecsv ${outputfilecsv}`
if [ ${isexistsamefile} = "true" ];then
    echo ${outputfilecsv} + "is already exist... exit"
    \rm ${outputfilecsv}
    exit
elif [ ${isexistsamefile} = "false" ];then
    :
else
    echo ${isexistsamefile} + "is not valid... exit"
    cat ${outputfilecsv}
    cat ${confhalf}
    \rm ${outputfilecsv}
    exit
fi

sed -i -e "s!outfile!${outputfileroot}!g" ${confhalf}
cp ${confhalf} ${confname}
echo "# Generated by the script at ${today} from ${conftemp} by $0" >> ${confname}

if [ ! -f $confname ]; then
    echo $confname + " is not exist... exit"
    \rm ${outputfilecsv}
    exit
fi
echo "log of ${outputfile}" > "$logname"
echo '#!/bin/bash' > "$jobname"
echo "cd '$PWD'" >> "$jobname"
echo "source ../../setup.sh" >> "$jobname"
echo "source ../setup.sh" >> "$jobname"
echo "source $confname" >> "$jobname"
echo "(time ../build/EnergyReconstruction) > "$logname" 2>&1" >> "$jobname"
echo "isseg=\`grep 'segmentation violation' ${logname}\`" >> "$jobname"
echo "if [ -n \"\$isseg\" ];then" >> "$jobname"
echo "   \rm ${outputfilecsv}" >> "$jobname"
echo "   \rm ${outputfileroot}" >> "$jobname"
echo "fi" >> "$jobname"
chmod +x "$jobname"
qsub -q ${SERVENAME} -e /dev/null -o /dev/null "$jobname"
#bash "$jobname"
